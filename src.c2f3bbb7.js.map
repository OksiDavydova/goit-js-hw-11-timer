{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","idInterval","getRefs","container","document","querySelector","daysRef","hoursRef","minsRef","secsRef","btnRef","updateTimer","time","Date","now","clearInterval","innerHTML","textContent","Math","floor","toString","padStart","startTimer","setInterval","timer"],"mappings":";;;AAwDA,aAxDA,QAAA,oBAEA,MAAMA,EACJC,aAAY,SAACC,EAAD,WAAWC,IAChBD,KAAAA,SAAWA,EACXC,KAAAA,WAAWA,EACXC,KAAAA,WAAa,KAIpBC,UACQC,MAAAA,EAAYC,SAASC,cAAc,KAAKN,UACxCO,EAAUH,EAAUE,cAAc,uBAClCE,EAAWJ,EAAUE,cAAc,wBACnCG,EAAUL,EAAUE,cAAc,uBAClCI,EAAUN,EAAUE,cAAc,uBAE7B,MAAA,CAACF,UAAAA,EAAWG,QAAAA,EAASC,SAAAA,EAAUC,QAAAA,EAASC,QAAAA,EAASC,OAD7CN,SAASC,cAAc,SAIxCM,aAAY,UAACR,EAAD,QAAYG,EAAZ,SAAqBC,EAArB,QAA+BC,EAA/B,QAAwCC,EAAxC,OAAiDC,IAErDE,MAAAA,EAAO,KAAKZ,WAAaa,KAAKC,MAEjCF,GAAAA,EAAO,EAIT,OAHAG,cAAc,KAAKd,iBACnBE,EAAUa,UAAa,sCAKxBV,EAAQW,YAAcC,KAAKC,MAAMP,EAAQ,OAAsBQ,WAAWC,SAAS,EAAE,KACrFd,EAASU,YAAcC,KAAKC,MAAOP,EAAQ,MAAyB,MAAiBQ,WAAWC,SAAS,EAAE,KAC3Gb,EAAQS,YAAcC,KAAKC,MAAOP,EAAQ,KAAoB,KAAYQ,WAAWC,SAAS,EAAE,KAChGZ,EAAQQ,YAAcC,KAAKC,MAAOP,EAAQ,IAAc,KAAMQ,WAAWC,SAAS,EAAE,KAKtFC,aAEOrB,KAAAA,WAAYsB,YAAY,KACtBZ,KAAAA,YAAY,KAAKT,YACrB,MAIP,MAAMsB,EAAQ,IAAI3B,EAAe,CAC/BE,SAAU,WACVC,WAAY,IAAIa,KAAK,wBAMvBW,EAAMb,YAAYa,EAAMtB,WACxBsB,EAAMF","file":"src.c2f3bbb7.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n  constructor({selector, targetDate}) {\n    this.selector = selector;\n    this.targetDate=targetDate;\n    this.idInterval = null;\n    // this.startTimer();\n    // this.startTimer= this.startTimer.bind(this);\n  }\n  getRefs(){\n    const container = document.querySelector(this.selector);\n    const daysRef = container.querySelector('[data-value=\"days\"]');\n    const hoursRef = container.querySelector('[data-value=\"hours\"]');\n    const minsRef = container.querySelector('[data-value=\"mins\"]');\n    const secsRef = container.querySelector('[data-value=\"secs\"]');\n    const btnRef = document.querySelector('.btn');\n        return {container, daysRef, hoursRef, minsRef, secsRef, btnRef};\n  }\n\n  updateTimer({container, daysRef, hoursRef, minsRef, secsRef, btnRef}){\n// btnRef.addEventListener('click', this.startTimer);\n    const time = this.targetDate - Date.now();\n\n   if (time < 0) {\n     clearInterval(this.idInterval);\n     container.innerHTML = `<h1 class=\"text\">Time is over</h1>`;\n    //  btnRef.removeEventListener('click', this.startTimer);\n     return;\n   }\n\n    daysRef.textContent = Math.floor(time / (1000 * 60 * 60 * 24)).toString().padStart(2,'0');\n    hoursRef.textContent = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)).toString().padStart(2,'0');\n    minsRef.textContent = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)).toString().padStart(2,'0');\n    secsRef.textContent = Math.floor((time % (1000 * 60)) / 1000).toString().padStart(2,'0');\n\n\n  }\n\n  startTimer() {\n    // console.log(this);\n    this.idInterval= setInterval(() => {\n      this.updateTimer(this.getRefs());\n    }, 1000);\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Dec 31, 2021 24:00'),\n});\n// const timer2 = new CountdownTimer({\n//   selector: '#timer-2',\n//   targetDate: new Date('Oct 3, 2021'),\n// });\ntimer.updateTimer(timer.getRefs());\ntimer.startTimer();\n\n\n"]}